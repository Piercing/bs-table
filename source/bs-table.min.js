"use strict"; angular.module("bsTable", []).directive("bsTable", function () { return { restrict: "A", scope: !0, compile: function (e) { var t = angular.element("<thead><tr></tr></thead>"), a = t.children("tr"), i = 0, n = e.children("tbody").children("tr"), l = n.attr("ng-repeat"); n.attr("ng-repeat", l + " | bsTableSkip:bsTableSortPagination.skipAt | orderBy:bsTableSortPagination.predicate:bsTableSortPagination.reverse | limitTo:bsTableSortPagination.pageSize"), angular.forEach(n.children("td"), function (e) { var t = angular.element(e), n = t.attr("data-type"), l = t.attr("data-title"); if ("command" == n) return a.append("<th>" + l + "</th>"), void (i += 1); var o = t.html(), r = o.replace(/[{}\s]/g, ""), c = r.split(/\.(.+)?/)[1].split(/\|/)[0], s = r.split(/\.(.+)?/)[1].split(/\|/)[1], p = s ? 'filter="' + s + '"' : ""; a.append('<th name="' + c + '" ' + p + ">" + l + '<span style="padding-left: 4px;"></span></th>'), t.removeAttr("data-title"), i += 1 }), e.prepend(t); var o = '<tfoot><tr><td colspan="' + i + '"><ul class="pagination"></ul><select ng-model="bsTableSortPagination.pageSize" class="form-control select-page-size"><option value="5" selected="selected">5</option><option value="10">10</option><option value="20">20</option><option value="40">40</option></select></td></tr></tfoot>'; return e.append(o), { pre: function (e, t) { var i = e.bsTableSortPagination = {}, n = t.children("tfoot").children("tr").children("td"), o = l.match(/^\s*(.+)\s+in\s+(.*)\s*$/)[2], r = e.$eval(o), c = r.length; e.$watchCollection(o, function () { c = e.$eval(o).length, i.lastPage = Math.ceil(c / i.pageSize), s() }), e.$watch("bsTableSortPagination.pageSize", function () { s() }), i.pageSize = 5, i.lastPage = Math.ceil(c / i.pageSize), i.page = 1, i.skipAt = (i.page - 1) * i.pageSize, n.children(".select-page-size").change(function () { var t = parseInt($(this).val()); i.lastPage = Math.ceil(c / t), i.page = 1, i.skipAt = (i.page - 1) * t, e.$digest() }); var s = function () { for (var a = "", n = 0; n < Math.ceil(c / e.bsTableSortPagination.pageSize) ; n++) a += "<li " + (i.page == n + 1 ? 'class="active"' : "") + '><a ng-href="#">' + (n + 1) + "</a></li>"; t.find(".pagination").html(a), t.find(".pagination").find("li").bind("click", p) }, p = function () { var t = parseInt($(this).find("a").text()); $(this).parent().find("li").removeClass("active"), $(this).addClass("active"), i.page = t, i.skipAt = (i.page - 1) * i.pageSize, e.$digest() }, h = function () { var t = $(this).children("span"); i.predicate = $(this).attr("name"), i.reverse = !1, t.hasClass("glyphicon glyphicon-chevron-up") || t.hasClass("glyphicon glyphicon-chevron-down") ? (i.reverse = t.hasClass("glyphicon glyphicon-chevron-up") ? !0 : !1, t.toggleClass("glyphicon glyphicon-chevron-up"), t.toggleClass("glyphicon glyphicon-chevron-down")) : (a.children("th").children("span").removeClass("glyphicon glyphicon-chevron-up glyphicon glyphicon-chevron-down"), t.addClass("glyphicon glyphicon-chevron-up"), i.reverse = !1), e.$digest() }, g = t.children("thead").children("tr").children("th"); angular.forEach(g, function (e) { $(e).click(h) }) } } } } }).filter("bsTableSkip", function () { return function (e, t) { return e.slice(t) } });